using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace SE.Neo.Core.Migrations
{
    public partial class updateViewCountForArticleAndProjectView : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("ALTER VIEW [dbo].[ArticleSearchView] AS \r\nWITH cte AS\r\n(\r\n  SELECT CONCAT('2_',CMS_Article_Id) as Id,CMS_Article_Id as Original_Id,Title as Subject, Created_Ts, \r\n  ISNULL(Last_Change_Ts, Created_Ts) as Last_Change_Ts, Is_Deleted, Content \r\n  as Description,\r\n  (SELECT dbo.CMS_Category.CMS_Category_Id as CategoryId, dbo.CMS_Category.Category_Name as Name FROM dbo.CMS_Article_Category \r\n  INNER JOIN dbo.CMS_Category ON dbo.CMS_Article_Category.CMS_Category_Id = dbo.CMS_Category.CMS_Category_Id \r\n  WHERE dbo.CMS_Article_Category.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Categories,\r\n  (SELECT dbo.CMS_Solution.CMS_Solution_Id as SolutionId, dbo.CMS_Solution.Solution_Name as Name FROM dbo.CMS_Article_Solution \r\n  INNER JOIN dbo.CMS_Solution ON dbo.CMS_Article_Solution.CMS_Solution_Id = dbo.CMS_Solution.CMS_Solution_Id \r\n  WHERE dbo.CMS_Article_Solution.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Solutions,\r\n  (SELECT dbo.CMS_Technology.CMS_Technology_Id as TechnologyId, dbo.CMS_Technology.Technology_Name as Name FROM dbo.CMS_Article_Technology \r\n  INNER JOIN dbo.CMS_Technology ON dbo.CMS_Article_Technology.CMS_Technology_Id = dbo.CMS_Technology.CMS_Technology_Id \r\n  WHERE dbo.CMS_Article_Technology.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Technologies,\r\n  (SELECT dbo.CMS_Region.CMS_Region_Id as RegionId, dbo.CMS_Region.Region_Name as Name FROM dbo.CMS_Article_Region \r\n  INNER JOIN dbo.CMS_Region ON dbo.CMS_Article_Region.CMS_Region_Id = dbo.CMS_Region.CMS_Region_Id WHERE \r\n  dbo.CMS_Article_Region.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Regions,\r\n  (SELECT dbo.CMS_Content_Tag.CMS_Content_Tag_Id as ContentTagId, dbo.CMS_Content_Tag.Content_Tag_Name as Name From dbo.CMS_Article_Content_Tag\r\n INNER JOIN dbo.CMS_Content_Tag ON dbo.CMS_Article_Content_Tag.CMS_Content_Tag_Id=dbo.CMS_Content_Tag.CMS_Content_Tag_Id\r\n WHERE dbo.CMS_Article_Content_Tag.CMS_Article_Id=dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as ContentTags,\r\n  ISNULL(\r\n  (SELECT CONVERT(varchar, dbo.CMS_Article_Role.Role_Id) as AllowedRoleId FROM dbo.CMS_Article_Role \r\n  WHERE dbo.CMS_Article_Role.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO),'[]') as Allowed_Roles,  \r\n  '[]' as Allowed_Categories, '[]' as Allowed_Regions, '[]' as Allowed_Companies,'[]' as Allowed_Users,CAST(0 AS bit) as Is_Private,2 \r\n  as Entity_Type FROM dbo.CMS_Article\r\n  ),\r\n\r\nviewCounts AS\r\n(\r\n   SELECT \r\n\t\tav.Article_Id, \r\n\t\tCOUNT(av.Article_Id) AS ViewCount \r\n\tFROM Article_View av\r\n\tWHERE av.Article_Id IN (SELECT Original_Id FROM cte)\r\n\tGROUP BY av.Article_Id\r\n)\r\nSELECT \r\n  ISNULL(vc.ViewCount, 0) AS View_Count,\r\n\tcte.*\r\nFROM cte\r\nLEFT JOIN viewCounts vc ON cte.Original_Id = vc.Article_Id");
            migrationBuilder.Sql("ALTER VIEW [dbo].[ProjectSearchView] AS \r\nWITH cte AS\r\n(\r\n   SELECT CONCAT('3_',Project_Id) as Id,Project_Id as Original_Id,Title as Subject, B.Status_Id as UserStatus, dbo.Project.Created_Ts, ISNULL(dbo.Project.Last_Change_Ts, dbo.Project.Created_Ts) as Last_Change_Ts, \r\nCAST(CASE WHEN dbo.Project.Status_Id > 1 THEN 1 ELSE 0 END AS bit) as Is_Deleted,Description, (SELECT TOP 1 dbo.CMS_Category.CMS_Category_Id as CategoryId, dbo.CMS_Category.Category_Name as Name \r\nFROM dbo.Project p INNER JOIN dbo.CMS_Category ON p.Category_Id = dbo.CMS_Category.CMS_Category_Id WHERE p.Project_Id = dbo.Project.Project_Id FOR JSON AUTO) as Categories,'[]' as Solutions,\r\n(SELECT dbo.CMS_Technology.CMS_Technology_Id as TechnologyId, dbo.CMS_Technology.Technology_Name as Name FROM dbo.Project_Technology INNER JOIN dbo.CMS_Technology ON \r\ndbo.Project_Technology.Technology_Id = dbo.CMS_Technology.CMS_Technology_Id WHERE dbo.Project_Technology.Project_Id = dbo.Project.Project_Id FOR JSON AUTO) as Technologies,\r\n(SELECT dbo.CMS_Region.CMS_Region_Id as RegionId, dbo.CMS_Region.Region_Name as Name FROM dbo.Project_Region INNER JOIN dbo.CMS_Region ON \r\ndbo.Project_Region.Region_Id = dbo.CMS_Region.CMS_Region_Id WHERE dbo.Project_Region.Project_Id = dbo.Project.Project_Id FOR JSON AUTO) as Regions,'[]' as Allowed_Regions,\r\n'[]' as Allowed_Roles,'[]' as Allowed_Categories,'[]' as Allowed_Users,\r\n'[]' as Allowed_Companies,CAST(0 AS bit) as Is_Private,3 as Entity_Type FROM dbo.Project\r\nINNER JOIN [User] B on B.User_Id = dbo.Project.Created_User_Id\r\n),\r\nviewCounts AS\r\n(\r\n   SELECT \r\n\t\tpv.Project_Id, \r\n\t\tCOUNT(pv.Project_Id) AS ViewCount \r\n\tFROM Project_View pv\r\n\tWHERE pv.Project_Id IN (SELECT Original_Id FROM cte)\r\n\tGROUP BY pv.Project_Id\r\n)\r\nSELECT \r\n  ISNULL(vc.ViewCount, 0) AS View_Count,\r\n\tcte.*\r\nFROM cte\r\nLEFT JOIN viewCounts vc ON cte.Original_Id = vc.Project_Id");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("ALTER VIEW [dbo].[ArticleSearchView] AS \r\n  SELECT CONCAT('2_',CMS_Article_Id) as Id,CMS_Article_Id as Original_Id,Title as Subject, Created_Ts, \r\n  ISNULL(Last_Change_Ts, Created_Ts) as Last_Change_Ts, Is_Deleted, Content \r\n  as Description,\r\n  (SELECT dbo.CMS_Category.CMS_Category_Id as CategoryId, dbo.CMS_Category.Category_Name as Name FROM dbo.CMS_Article_Category \r\n  INNER JOIN dbo.CMS_Category ON dbo.CMS_Article_Category.CMS_Category_Id = dbo.CMS_Category.CMS_Category_Id \r\n  WHERE dbo.CMS_Article_Category.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Categories,\r\n  (SELECT dbo.CMS_Solution.CMS_Solution_Id as SolutionId, dbo.CMS_Solution.Solution_Name as Name FROM dbo.CMS_Article_Solution \r\n  INNER JOIN dbo.CMS_Solution ON dbo.CMS_Article_Solution.CMS_Solution_Id = dbo.CMS_Solution.CMS_Solution_Id \r\n  WHERE dbo.CMS_Article_Solution.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Solutions,\r\n  (SELECT dbo.CMS_Technology.CMS_Technology_Id as TechnologyId, dbo.CMS_Technology.Technology_Name as Name FROM dbo.CMS_Article_Technology \r\n  INNER JOIN dbo.CMS_Technology ON dbo.CMS_Article_Technology.CMS_Technology_Id = dbo.CMS_Technology.CMS_Technology_Id \r\n  WHERE dbo.CMS_Article_Technology.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Technologies,\r\n  (SELECT dbo.CMS_Region.CMS_Region_Id as RegionId, dbo.CMS_Region.Region_Name as Name FROM dbo.CMS_Article_Region \r\n  INNER JOIN dbo.CMS_Region ON dbo.CMS_Article_Region.CMS_Region_Id = dbo.CMS_Region.CMS_Region_Id WHERE \r\n  dbo.CMS_Article_Region.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Regions,\r\n  (SELECT dbo.CMS_Content_Tag.CMS_Content_Tag_Id as ContentTagId, dbo.CMS_Content_Tag.Content_Tag_Name as Name From dbo.CMS_Article_Content_Tag\r\n INNER JOIN dbo.CMS_Content_Tag ON dbo.CMS_Article_Content_Tag.CMS_Content_Tag_Id=dbo.CMS_Content_Tag.CMS_Content_Tag_Id\r\n WHERE dbo.CMS_Article_Content_Tag.CMS_Article_Id=dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as ContentTags,\r\n  ISNULL(\r\n  (SELECT CONVERT(varchar, dbo.CMS_Article_Role.Role_Id) as AllowedRoleId FROM dbo.CMS_Article_Role \r\n  WHERE dbo.CMS_Article_Role.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO),'[]') as Allowed_Roles,  \r\n  '[]' as Allowed_Categories, '[]' as Allowed_Regions, '[]' as Allowed_Companies,'[]' as Allowed_Users,CAST(0 AS bit) as Is_Private,2 \r\n  as Entity_Type FROM dbo.CMS_Article");
            migrationBuilder.Sql("ALTER VIEW [dbo].[ProjectSearchView] AS SELECT CONCAT('3_',Project_Id) as Id,Project_Id as Original_Id,Title as Subject, B.Status_Id as UserStatus, dbo.Project.Created_Ts, ISNULL(dbo.Project.Last_Change_Ts, dbo.Project.Created_Ts) as Last_Change_Ts, \r\nCAST(CASE WHEN dbo.Project.Status_Id > 1 THEN 1 ELSE 0 END AS bit) as Is_Deleted,Description, (SELECT TOP 1 dbo.CMS_Category.CMS_Category_Id as CategoryId, dbo.CMS_Category.Category_Name as Name \r\nFROM dbo.Project p INNER JOIN dbo.CMS_Category ON p.Category_Id = dbo.CMS_Category.CMS_Category_Id WHERE p.Project_Id = dbo.Project.Project_Id FOR JSON AUTO) as Categories,'[]' as Solutions,\r\n(SELECT dbo.CMS_Technology.CMS_Technology_Id as TechnologyId, dbo.CMS_Technology.Technology_Name as Name FROM dbo.Project_Technology INNER JOIN dbo.CMS_Technology ON \r\ndbo.Project_Technology.Technology_Id = dbo.CMS_Technology.CMS_Technology_Id WHERE dbo.Project_Technology.Project_Id = dbo.Project.Project_Id FOR JSON AUTO) as Technologies,\r\n(SELECT dbo.CMS_Region.CMS_Region_Id as RegionId, dbo.CMS_Region.Region_Name as Name FROM dbo.Project_Region INNER JOIN dbo.CMS_Region ON \r\ndbo.Project_Region.Region_Id = dbo.CMS_Region.CMS_Region_Id WHERE dbo.Project_Region.Project_Id = dbo.Project.Project_Id FOR JSON AUTO) as Regions,'[]' as Allowed_Regions,\r\n'[]' as Allowed_Roles,'[]' as Allowed_Categories,'[]' as Allowed_Users,\r\n'[]' as Allowed_Companies,CAST(0 AS bit) as Is_Private,3 as Entity_Type FROM dbo.Project\r\nINNER JOIN [User] B on B.User_Id = dbo.Project.Created_User_Id");
        }
    }
}
