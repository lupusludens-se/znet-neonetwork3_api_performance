using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace SE.Neo.Core.Migrations
{
    public partial class updateview_articlesearchview : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("ALTER VIEW [dbo].[ArticleSearchView] AS \r\n  SELECT CONCAT('2_',CMS_Article_Id) as Id,CMS_Article_Id as Original_Id,Title as Subject, Created_Ts, \r\n  ISNULL(Last_Change_Ts, Created_Ts) as Last_Change_Ts, Is_Deleted, Content \r\n  as Description,\r\n  (SELECT dbo.CMS_Category.CMS_Category_Id as CategoryId, dbo.CMS_Category.Category_Name as Name FROM dbo.CMS_Article_Category \r\n  INNER JOIN dbo.CMS_Category ON dbo.CMS_Article_Category.CMS_Category_Id = dbo.CMS_Category.CMS_Category_Id \r\n  WHERE dbo.CMS_Article_Category.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Categories,\r\n  (SELECT dbo.CMS_Solution.CMS_Solution_Id as SolutionId, dbo.CMS_Solution.Solution_Name as Name FROM dbo.CMS_Article_Solution \r\n  INNER JOIN dbo.CMS_Solution ON dbo.CMS_Article_Solution.CMS_Solution_Id = dbo.CMS_Solution.CMS_Solution_Id \r\n  WHERE dbo.CMS_Article_Solution.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Solutions,\r\n  (SELECT dbo.CMS_Technology.CMS_Technology_Id as TechnologyId, dbo.CMS_Technology.Technology_Name as Name FROM dbo.CMS_Article_Technology \r\n  INNER JOIN dbo.CMS_Technology ON dbo.CMS_Article_Technology.CMS_Technology_Id = dbo.CMS_Technology.CMS_Technology_Id \r\n  WHERE dbo.CMS_Article_Technology.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Technologies,\r\n  (SELECT dbo.CMS_Region.CMS_Region_Id as RegionId, dbo.CMS_Region.Region_Name as Name FROM dbo.CMS_Article_Region \r\n  INNER JOIN dbo.CMS_Region ON dbo.CMS_Article_Region.CMS_Region_Id = dbo.CMS_Region.CMS_Region_Id WHERE \r\n  dbo.CMS_Article_Region.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Regions,\r\n  (SELECT dbo.CMS_Content_Tag.CMS_Content_Tag_Id as ContentTagId, dbo.CMS_Content_Tag.Content_Tag_Name as Name From dbo.CMS_Article_Content_Tag\r\n INNER JOIN dbo.CMS_Content_Tag ON dbo.CMS_Article_Content_Tag.CMS_Content_Tag_Id=dbo.CMS_Content_Tag.CMS_Content_Tag_Id\r\n WHERE dbo.CMS_Article_Content_Tag.CMS_Article_Id=dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as ContentTags,\r\n  ISNULL(\r\n  (SELECT CONVERT(varchar, dbo.CMS_Article_Role.Role_Id) as AllowedRoleId FROM dbo.CMS_Article_Role \r\n  WHERE dbo.CMS_Article_Role.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO),'[]') as Allowed_Roles,  \r\n  '[]' as Allowed_Categories, '[]' as Allowed_Regions, '[]' as Allowed_Companies,'[]' as Allowed_Users,CAST(0 AS bit) as Is_Private,2 \r\n  as Entity_Type FROM dbo.CMS_Article");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql("ALTER VIEW [dbo].[ArticleSearchView] AS SELECT CONCAT('2_',CMS_Article_Id) as Id,CMS_Article_Id as Original_Id,Title as Subject, Created_Ts, ISNULL(Last_Change_Ts, Created_Ts) as Last_Change_Ts, Is_Deleted, Content as Description,(SELECT dbo.CMS_Category.CMS_Category_Id as CategoryId, dbo.CMS_Category.Category_Name as Name FROM dbo.CMS_Article_Category INNER JOIN dbo.CMS_Category ON dbo.CMS_Article_Category.CMS_Category_Id = dbo.CMS_Category.CMS_Category_Id WHERE dbo.CMS_Article_Category.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Categories,(SELECT dbo.CMS_Solution.CMS_Solution_Id as SolutionId, dbo.CMS_Solution.Solution_Name as Name FROM dbo.CMS_Article_Solution INNER JOIN dbo.CMS_Solution ON dbo.CMS_Article_Solution.CMS_Solution_Id = dbo.CMS_Solution.CMS_Solution_Id WHERE dbo.CMS_Article_Solution.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Solutions,(SELECT dbo.CMS_Technology.CMS_Technology_Id as TechnologyId, dbo.CMS_Technology.Technology_Name as Name FROM dbo.CMS_Article_Technology INNER JOIN dbo.CMS_Technology ON dbo.CMS_Article_Technology.CMS_Technology_Id = dbo.CMS_Technology.CMS_Technology_Id WHERE dbo.CMS_Article_Technology.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Technologies,(SELECT dbo.CMS_Region.CMS_Region_Id as RegionId, dbo.CMS_Region.Region_Name as Name FROM dbo.CMS_Article_Region INNER JOIN dbo.CMS_Region ON dbo.CMS_Article_Region.CMS_Region_Id = dbo.CMS_Region.CMS_Region_Id WHERE dbo.CMS_Article_Region.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO) as Regions,ISNULL((SELECT CONVERT(varchar, dbo.CMS_Article_Role.Role_Id) as AllowedRoleId FROM dbo.CMS_Article_Role WHERE dbo.CMS_Article_Role.CMS_Article_Id = dbo.CMS_Article.CMS_Article_Id FOR JSON AUTO),'[]') as Allowed_Roles,  '[]' as Allowed_Categories, '[]' as Allowed_Regions, '[]' as Allowed_Companies,'[]' as Allowed_Users,CAST(0 AS bit) as Is_Private,2 as Entity_Type FROM dbo.CMS_Article");
        }
    }
}
